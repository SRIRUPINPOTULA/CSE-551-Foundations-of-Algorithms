{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Question: 
\f1\b0 \
\
We want to invest in a company in NY Stock market next year. Its stock price changes seasonally during the year. We have the daily stock price of this company for the last year (365 daily prices). Some days it increases, some day it decreases. We want to invest in it and maximize our profit. What was the best time to buy (e.g Apr15) and sell (e.g. Sep15) this stock last year? We can buy and sell only once in a year, so don't want to pay too much taxes. In order to make it easier for you, just use the daily price of 9 days at below, instead of 365 days. And also just print out the max profit that we can make. No need to print out start & finish index (day). arr = [15, 13, 8, 14, 12, 9, 10, 15, 9] (Hint: When you read it you should be able to figure it out to find daily differences (negative/positive values) and apply Maximum Subarray Sum algorithm.) \
\
Please download the below Python code templates and write Maximum Subarray Sum algorithm in 3 different ways: O(n^2), O(n logn), O(n).}